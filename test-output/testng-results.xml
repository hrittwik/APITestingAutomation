<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="11" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-04-28T19:29:04 BDT" name="Default suite" finished-at="2021-04-28T19:29:19 BDT" duration-ms="15062">
    <groups>
    </groups>
    <test started-at="2021-04-28T19:29:04 BDT" name="Default test" finished-at="2021-04-28T19:29:19 BDT" duration-ms="15062">
      <class name="restAssuredDemo.Demo1_GET_Request">
        <test-method signature="deleteUser()[pri:0, instance:restAssuredDemo.Demo1_GET_Request@2f177a4b]" started-at="2021-04-28T19:29:04 BDT" name="deleteUser" finished-at="2021-04-28T19:29:09 BDT" duration-ms="4184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method signature="getList()[pri:0, instance:restAssuredDemo.Demo1_GET_Request@2f177a4b]" started-at="2021-04-28T19:29:09 BDT" name="getList" finished-at="2021-04-28T19:29:10 BDT" duration-ms="1427" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getList -->
        <test-method signature="getListUsers()[pri:0, instance:restAssuredDemo.Demo1_GET_Request@2f177a4b]" started-at="2021-04-28T19:29:10 BDT" name="getListUsers" finished-at="2021-04-28T19:29:11 BDT" duration-ms="476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListUsers -->
        <test-method signature="getSingleUser()[pri:0, instance:restAssuredDemo.Demo1_GET_Request@2f177a4b]" started-at="2021-04-28T19:29:11 BDT" name="getSingleUser" finished-at="2021-04-28T19:29:11 BDT" duration-ms="626" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSingleUser -->
        <test-method signature="getSingleUserNotFound()[pri:0, instance:restAssuredDemo.Demo1_GET_Request@2f177a4b]" started-at="2021-04-28T19:29:11 BDT" name="getSingleUserNotFound" finished-at="2021-04-28T19:29:12 BDT" duration-ms="837" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <404>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <404>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at restAssuredDemo.Demo1_GET_Request.getSingleUserNotFound(Demo1_GET_Request.java:54)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSingleUserNotFound -->
        <test-method signature="getSingleUserResource()[pri:0, instance:restAssuredDemo.Demo1_GET_Request@2f177a4b]" started-at="2021-04-28T19:29:12 BDT" name="getSingleUserResource" finished-at="2021-04-28T19:29:13 BDT" duration-ms="499" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSingleUserResource -->
        <test-method signature="postApiRequest()[pri:0, instance:restAssuredDemo.Demo1_GET_Request@2f177a4b]" started-at="2021-04-28T19:29:13 BDT" name="postApiRequest" finished-at="2021-04-28T19:29:14 BDT" duration-ms="1766" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postApiRequest -->
        <test-method signature="putUpdateUserData()[pri:0, instance:restAssuredDemo.Demo1_GET_Request@2f177a4b]" started-at="2021-04-28T19:29:14 BDT" name="putUpdateUserData" finished-at="2021-04-28T19:29:15 BDT" duration-ms="1051" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- putUpdateUserData -->
        <test-method signature="registerUnsuccessful()[pri:0, instance:restAssuredDemo.Demo1_GET_Request@2f177a4b]" started-at="2021-04-28T19:29:15 BDT" name="registerUnsuccessful" finished-at="2021-04-28T19:29:17 BDT" duration-ms="1445" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerUnsuccessful -->
        <test-method signature="setRegisterSuccessful()[pri:0, instance:restAssuredDemo.Demo1_GET_Request@2f177a4b]" started-at="2021-04-28T19:29:17 BDT" name="setRegisterSuccessful" finished-at="2021-04-28T19:29:17 BDT" duration-ms="630" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setRegisterSuccessful -->
        <test-method signature="successfulLogin()[pri:0, instance:restAssuredDemo.Demo1_GET_Request@2f177a4b]" started-at="2021-04-28T19:29:17 BDT" name="successfulLogin" finished-at="2021-04-28T19:29:18 BDT" duration-ms="627" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulLogin -->
        <test-method signature="unSuccessfulLogin()[pri:0, instance:restAssuredDemo.Demo1_GET_Request@2f177a4b]" started-at="2021-04-28T19:29:18 BDT" name="unSuccessfulLogin" finished-at="2021-04-28T19:29:19 BDT" duration-ms="1396" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unSuccessfulLogin -->
      </class> <!-- restAssuredDemo.Demo1_GET_Request -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
